# Copyright Contributors to the Packit project.
# SPDX-License-Identifier: MIT

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres-{{ postgres_version }}
spec:
  selector:
    matchLabels:
      component: postgres-{{ postgres_version }}
  template:
    metadata:
      labels:
        component: postgres-{{ postgres_version }}
{% if managed_platform %}
        paas.redhat.com/appcode: {{ appcode }}
{% endif %}
    spec:
      containers:
        - name: postgres
          image: quay.io/sclorg/postgresql-{{ postgres_version }}-c9s
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRESQL_USER
              valueFrom: {secretKeyRef: {name: postgres-secret, key: database-user}}
            - name: POSTGRESQL_PASSWORD
              valueFrom: {secretKeyRef: {name: postgres-secret, key: database-password}}
            - name: POSTGRESQL_DATABASE
              valueFrom: {secretKeyRef: {name: postgres-secret, key: database-name}}
            # https://www.postgresql.org/docs/13/kernel-resources.html#LINUX-MEMORY-OVERCOMMIT
            - name: PG_OOM_ADJUST_FILE
              value: "/proc/self/oom_score_adj"
          ports:
            - containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
# The readinessProbe wasn't reliable after we moved to automotive cluster
# but you can try again on MP+
#          readinessProbe:
#            exec:
#              command:
#                - /usr/libexec/check-container
          resources:
            requests:
              memory: "{{ '2Gi' if project == 'packit-prod' else '128Mi' }}"
              cpu: "30m"
            limits:
# The shared_buffers & effective_cache_size values are set by the container
# based on this limit, so keep the limit reasonably high.
              memory: "{{ '4Gi' if project == 'packit-prod' else '256Mi' }}"
# Not utilized most of the time, but useful during migrations and for some queries
              cpu: "1"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/pgsql/data
            - name: postgres-config
              mountPath: /opt/app-root/src/postgresql-cfg
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-{{ postgres_version }}
        - name: postgres-config
          configMap:
            name: postgres-config
  replicas: 1
  strategy:
    type: Recreate
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgres-config
data:
  packit.conf: |-
    # The following values have been inspired by https://pgtune.leopard.in.ua
    # Run psql -c 'SHOW ALL' in the pod's terminal to see all values.
    # Default random_page_cost is 4.0. Use 1.1 for SSD storage.
    random_page_cost = 1.1
    # Default effective_io_concurrency is 1. Use hundreds for SSD storage.
    effective_io_concurrency = 200
    min_wal_size = 1GB
    max_wal_size = 4GB
    # (shared_buffers, effective_cache_size and max_connections can be set by env. vars
    # https://github.com/sclorg/postgresql-container/tree/generated/13#environment-variables-and-volumes)
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
{% if managed_platform %}
  labels:
    paas.redhat.com/appcode: {{ appcode }}
{% endif %}
spec:
  ports:
    - name: postgres-port
      port: 5432
      targetPort: 5432
  selector:
    component: postgres-{{ postgres_version }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-{{ postgres_version }}
{% if managed_platform %}
  labels:
    paas.redhat.com/appcode: {{ appcode }}
  annotations:
    kubernetes.io/reclaimPolicy: Delete
{% endif %}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ '4Gi' if deployment == 'prod' else '1Gi' }}"
{% if managed_platform %}
  storageClassName: aws-ebs
{% endif %}
